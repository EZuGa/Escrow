version: "3.3"

services:
  backend:
    container_name: mudo_be
    build:
      context: app-backend
    volumes:
      - "./app-backend:/code"
    command: ["sh", "./start.sh"]
    expose:
      - 8080
    depends_on:
      - db
      - redis
    networks:
      - main
    restart: on-failure

  frontend:
    container_name: mudo_fe
    build:
      context: client
    volumes:
      - "./client:/app"
      - frontend-dist:/app/dist/escrow
    ports:
      - "4200:4200"
    networks:
      - main
    restart: on-failure

  nginx:
    container_name: mudo_nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - frontend-dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
    restart: unless-stopped
    networks:
      - main

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw


  db:
    container_name: mudo_db
    image: postgres:13
    networks:
      - main
    ports:
      - "5434:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=mysekretpassword
      - POSTGRES_USER=mudo-user
      - POSTGRES_DB=mudo-db
  
  redis:
    container_name: mudo_redis
    image: redis:alpine
    volumes:
      - redis-data:/data
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  pg-data:
  redis-data:
  frontend-dist:

